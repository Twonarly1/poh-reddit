"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
const chalk = require("chalk");
const command_1 = require("@oclif/command");
const errors_1 = require("@oclif/errors");
const transpiler_1 = require("@stepzen/transpiler");
const utils_1 = require("../shared/utils");
const zen_command_1 = require("../shared/zen-command");
const core_1 = require("@oclif/core");
class Validate extends zen_command_1.default {
    async run() {
        const { args } = this.parse(Validate);
        const folder = (0, utils_1.getDirectory)(args.folder);
        try {
            const schema = (0, transpiler_1.stitch)(folder);
            (0, transpiler_1.validate)(schema, {
                extensions: await (0, utils_1.getStepZenExtensions)(),
            });
        }
        catch (error) {
            core_1.CliUx.ux.action.stop(chalk.red('fail'));
            throw new errors_1.CLIError(chalk.red(error));
        }
    }
}
exports.default = Validate;
Validate.description = 'validate a graphql schema';
Validate.hidden = true;
Validate.flags = Object.assign(Object.assign({}, zen_command_1.default.flags), { help: command_1.flags.help({ char: 'h' }) });
Validate.args = [
    {
        name: 'folder',
        required: true,
    },
];
//# sourceMappingURL=validate.js.map