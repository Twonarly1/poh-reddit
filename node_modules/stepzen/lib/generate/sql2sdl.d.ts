import type { CommonImportOptions } from '.';
import type { MachineConfiguration } from '../shared/types';
export declare type DBType = 'mysql' | 'postgresql';
export declare type Sql2SdlOptions = CommonImportOptions & {
    host: string;
    database: string;
    user: string;
    password: string;
    linkTypes?: boolean;
    schema?: string;
    include?: 'tables-only' | 'views-only' | 'tables-and-views';
};
export declare type InteractiveSql2SdlOptions = Pick<Sql2SdlOptions, 'host' | 'database' | 'user' | 'password' | 'linkTypes' | 'schema'>;
export declare const parseHost: (host?: string) => {
    host?: string | undefined;
    port?: string | undefined;
    isValid: boolean;
};
export declare const askSqlQuestions: (dbType: DBType, defaultAnswers?: Partial<Sql2SdlOptions>) => Promise<InteractiveSql2SdlOptions>;
export declare const sql2sdl: (dbType: DBType, { name, source, host, database, user, password, linkTypes, include, schema, onConflict, }: Sql2SdlOptions, configuration: MachineConfiguration) => Promise<{
    error: string;
} | {
    outPath: string;
}>;
//# sourceMappingURL=sql2sdl.d.ts.map