import { ParseError } from './types';
export interface Header {
    name: string;
    value: string;
}
export declare type NameValueHeaderInput = Header;
export declare type NamePartsHeaderInput = {
    name: string;
    parts: HeaderInputValuePart[];
};
export declare type HeaderInput = NameValueHeaderInput | NamePartsHeaderInput;
export declare type HeaderInputConstantValuePart = {
    kind: 'Constant';
    value: string;
};
export declare type HeaderInputVariableValuePart = {
    kind: 'Variable';
    value: string;
    name: string;
};
export declare type HeaderInputValuePart = HeaderInputConstantValuePart | HeaderInputVariableValuePart;
export declare const HEADER_REGEX: RegExp;
/**
 * Parse a header string according to https://curl.se/docs/manpage.html#-H
 * and https://datatracker.ietf.org/doc/html/rfc2616#section-4.2
 *
 * @param {*} header a curl header string, e.g. `"api-key: asfdasdfad"`
 * @returns {*} a name/value record or
 *    `null` for the `Header:` notation that means "remove this header" in
 *    the cURL spec or a error object if cannot parse the string.
 */
export declare const parseHeader: (header: string) => Header | null | ParseError;
//# sourceMappingURL=header.d.ts.map