"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
exports.upload = exports.list = exports.deploy = void 0;
const configuration_1 = require("./configuration");
const constants_1 = require("./constants");
const stepzen_sdk_1 = require("./stepzen-sdk");
const deploy = async (destination, configurationsets, schema) => {
    const config = (await (0, configuration_1.readConfiguration)());
    const server = (0, configuration_1.getZenCtlUrl)(config);
    const client = await stepzen_sdk_1.default.client({
        account: config.account,
        adminkey: config.adminkey,
        domain: constants_1.STEPZEN_DOMAIN,
        server,
    });
    const payload = { schema };
    if (configurationsets) {
        payload.configurationsets = configurationsets.split(',');
    }
    return client.deploy(destination, payload);
};
exports.deploy = deploy;
const list = async (type) => {
    const config = (await (0, configuration_1.readConfiguration)());
    const server = (0, configuration_1.getZenCtlUrl)(config);
    const client = await stepzen_sdk_1.default.client({
        account: config.account,
        adminkey: config.adminkey,
        domain: constants_1.STEPZEN_DOMAIN,
        server,
    });
    return client.list[type === 'endpoints' ? 'deployments' : type]();
};
exports.list = list;
const upload = async (type, destination, source) => {
    const config = (await (0, configuration_1.readConfiguration)());
    const server = (0, configuration_1.getZenCtlUrl)(config);
    const client = await stepzen_sdk_1.default.client({
        account: config.account,
        adminkey: config.adminkey,
        domain: constants_1.STEPZEN_DOMAIN,
        server,
    });
    return client.upload[type](destination, source);
};
exports.upload = upload;
//# sourceMappingURL=actions.js.map