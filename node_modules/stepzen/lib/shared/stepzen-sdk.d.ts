import { StepZenCredentials } from './types';
declare const stepzen: {
    login: (zenServer: string, adminkey: string, account?: string) => Promise<StepZenCredentials>;
    createAnonymousAccount: (uuid: string, zenServer: string) => Promise<StepZenCredentials>;
    verify: (account: string, adminkey: string) => Promise<boolean>;
    client: (options: import("packages/sdk/src/client").UserCredentialsClientOptions | import("packages/sdk/src/client").AnonymousClientOptions) => Promise<{
        readonly credentials: {
            account: string;
            adminkey: string;
            apikey: string;
        };
        account: () => Promise<{
            account: string;
            apikey: string;
        } | {
            success: false;
            errors: string[];
        }>;
        deploy: (destination: string, properties: {
            configurationsets?: string[] | undefined;
            schema: string;
        }) => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
        list: {
            deployments: () => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
            configurationsets: () => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
            schemas: () => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
        };
        upload: {
            configurationset: (destination: string, file: string) => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
            schema: (destination: string, directory: string) => Promise<import("packages/sdk/src/client").ZenCtlResponse>;
        };
    }>;
};
export default stepzen;
//# sourceMappingURL=stepzen-sdk.d.ts.map